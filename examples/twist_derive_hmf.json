{
    "content": [
        {
            "conds": [
                {
                    "cond": "type(w,0,3)",
                    "latex_cond": "type(w,0,3)"
                },
                {
                    "cond": "type(v,0,3)",
                    "latex_cond": "type(v,0,3)"
                }
            ],
            "eq": "twist(w,v) = hat(rcon(w,v))",
            "latex_eq": "twist(w,v) = hat({rcon(w,v)})",
            "latex_lhs": "twist(w,v)",
            "type": "FuncDef"
        },
        {
            "conds": [
                {
                    "cond": "norm(w) = 0",
                    "latex_cond": "\\|w\\| = 0"
                }
            ],
            "finished": true,
            "fixes": [
                [
                    "hmf",
                    "$fun($real, $tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "twist",
                    "$fun($tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "w",
                    "$tensor($real, 3, 1)"
                ],
                [
                    "v",
                    "$tensor($real, 3, 1)"
                ]
            ],
            "goal": "(D t. hmf(t,w,v)) = twist(w,v) * hmf(t,w,v)",
            "latex_goal": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})} = twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                        "start": "D t. hmf(t,w,v)",
                        "steps": [
                            {
                                "latex_res": "\\frac{d}{dt} hm(\\mathbf{1}_{3 \\times 3},t v)",
                                "res": "D t. hm(unit_matrix(3),t * v)",
                                "rule": {
                                    "func_name": "hmf",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{d}{dt} \\begin{bmatrix}\\mathbf{1}_{3 \\times 3}&t v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "D t. [[unit_matrix(3), t * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "func_name": "hm",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\mathbf{0}_{3 \\times 3}&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[zero_matrix(3,3), v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                        "start": "twist(w,v) * hmf(t,w,v)",
                        "steps": [
                            {
                                "latex_res": "hat({\\begin{bmatrix}w\\\\v\\end{bmatrix}}) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                                "res": "hat([[w], [v]]) * hmf(t,w,v)",
                                "rule": {
                                    "func_name": "twist",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "hat({\\begin{bmatrix}w\\\\v\\end{bmatrix}}) hm(\\mathbf{1}_{3 \\times 3},t v)",
                                "res": "hat([[w], [v]]) * hm(unit_matrix(3),t * v)",
                                "rule": {
                                    "func_name": "hmf",
                                    "loc": "1",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "hat({\\begin{bmatrix}w\\\\v\\end{bmatrix}}) \\begin{bmatrix}\\mathbf{1}_{3 \\times 3}&t v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "hat([[w], [v]]) * [[unit_matrix(3), t * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "func_name": "hm",
                                    "loc": "1",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w}&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix} \\begin{bmatrix}\\mathbf{1}_{3 \\times 3}&t v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w), v], [zero_matrix(1,3), zero_matrix(1,1)]] * [[unit_matrix(3), t * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "loc": "0",
                                    "name": "ExpandMatFunc",
                                    "str": "expand functions of matrices at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}hat({\\mathbf{0}_{3 \\times 1}})&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix} \\begin{bmatrix}\\mathbf{1}_{3 \\times 3}&t v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(zero_matrix(3,1)), v], [zero_matrix(1,3), zero_matrix(1,1)]] * [[unit_matrix(3), t * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "latex_str": "rewriting \\(w\\) to \\(\\mathbf{0}_{3 \\times 1}\\)",
                                    "name": "Equation",
                                    "new_expr": "zero_matrix(3,1)",
                                    "old_expr": "w",
                                    "str": "rewriting w to zero_matrix(3,1)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\mathbf{0}_{3 \\times 3}&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[zero_matrix(3,3), v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "(D t. hmf(t,w,v)) = twist(w,v) * hmf(t,w,v)",
                "latex_goal": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})} = twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        },
        {
            "conds": [
                {
                    "cond": "norm(w) = 1",
                    "latex_cond": "\\|w\\| = 1"
                }
            ],
            "finished": true,
            "fixes": [
                [
                    "hmf",
                    "$fun($real, $tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "twist",
                    "$fun($tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "w",
                    "$tensor($real, 3, 1)"
                ]
            ],
            "goal": "(D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))",
            "latex_goal": "\\frac{d}{dt} e^{t \\hat{w}} = \\hat{w} e^{t \\hat{w}}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\frac{d}{dt} e^{t \\hat{w}}",
                        "start": "D t. exp(t * hat(w))",
                        "steps": [
                            {
                                "latex_res": "\\frac{d}{dt} (\\mathbf{1}_{3 \\times 3} + \\sin{t} \\hat{w} + (1 - \\cos{t}) \\hat{w} ^ {2})",
                                "res": "D t. unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2",
                                "rule": {
                                    "eq": "exp(t * hat(w)) = unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(e^{t \\hat{w}} = \\mathbf{1}_{3 \\times 3} + \\sin{t} \\hat{w} + (1 - \\cos{t}) \\hat{w} ^ {2}\\)",
                                    "name": "ApplyEquation",
                                    "source": "exp(t * hat(w))",
                                    "str": "apply equation: exp(t * hat(w)) = unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\sin{t} \\hat{w} ^ {2} + \\cos{t} \\hat{w}",
                                "res": "sin(t) * hat(w) ^ 2 + cos(t) * hat(w)",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "\\hat{w} e^{t \\hat{w}}",
                        "start": "hat(w) * exp(t * hat(w))",
                        "steps": [
                            {
                                "latex_res": "\\hat{w} (\\mathbf{1}_{3 \\times 3} + \\sin{t} \\hat{w} + (1 - \\cos{t}) \\hat{w} ^ {2})",
                                "res": "hat(w) * (unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2)",
                                "rule": {
                                    "eq": "exp(t * hat(w)) = unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(e^{t \\hat{w}} = \\mathbf{1}_{3 \\times 3} + \\sin{t} \\hat{w} + (1 - \\cos{t}) \\hat{w} ^ {2}\\)",
                                    "name": "ApplyEquation",
                                    "source": "exp(t * hat(w))",
                                    "str": "apply equation: exp(t * hat(w)) = unit_matrix(3) + sin(t) * hat(w) + (1 - cos(t)) * hat(w) ^ 2"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "(-\\cos{t} + 1) \\hat{w} \\hat{w} ^ {2} + \\sin{t} \\hat{w} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3}",
                                "res": "(-cos(t) + 1) * hat(w) * hat(w) ^ 2 + sin(t) * hat(w) * hat(w) + hat(w) * unit_matrix(3)",
                                "rule": {
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "(-\\cos{t} + 1) (\\hat{w} \\hat{w} ^ {2}) + \\sin{t} \\hat{w} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3}",
                                "res": "(-cos(t) + 1) * (hat(w) * hat(w) ^ 2) + sin(t) * hat(w) * hat(w) + hat(w) * unit_matrix(3)",
                                "rule": {
                                    "latex_str": "rewriting \\((-\\cos{t} + 1) \\hat{w} \\hat{w} ^ {2}\\) to \\((-\\cos{t} + 1) (\\hat{w} \\hat{w} ^ {2})\\)",
                                    "name": "Equation",
                                    "new_expr": "(-cos(t) + 1) * (hat(w) * hat(w) ^ 2)",
                                    "old_expr": "(-cos(t) + 1) * hat(w) * hat(w) ^ 2",
                                    "str": "rewriting (-cos(t) + 1) * hat(w) * hat(w) ^ 2 to (-cos(t) + 1) * (hat(w) * hat(w) ^ 2)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "(-\\cos{t} + 1) \\hat{w} ^ {2\\cdot 1 + 1} + \\sin{t} \\hat{w} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3}",
                                "res": "(-cos(t) + 1) * hat(w) ^ (2 * 1 + 1) + sin(t) * hat(w) * hat(w) + hat(w) * unit_matrix(3)",
                                "rule": {
                                    "latex_str": "rewrite \\(\\hat{w} \\hat{w} ^ {2}\\) to \\(\\hat{w} ^ {2\\cdot 1 + 1}\\) using identity",
                                    "name": "ApplyIdentity",
                                    "source": "hat(w) * hat(w) ^ 2",
                                    "str": "rewrite hat(w) * hat(w) ^ 2 to hat(w) ^ (2 * 1 + 1) using identity",
                                    "target": "hat(w) ^ (2 * 1 + 1)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "(-\\cos{t} + 1) ((-1) ^ {1} \\hat{w}) + \\sin{t} \\hat{w} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3}",
                                "res": "(-cos(t) + 1) * ((-1) ^ 1 * hat(w)) + sin(t) * hat(w) * hat(w) + hat(w) * unit_matrix(3)",
                                "rule": {
                                    "eq": "hat(w) ^ (2 * n + 1) = (-1) ^ n * hat(w)",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\hat{w} ^ {2 n + 1} = (-1) ^ {n} \\hat{w}\\)",
                                    "name": "ApplyEquation",
                                    "source": "hat(w) ^ (2 * 1 + 1)",
                                    "str": "apply equation: hat(w) ^ (2 * n + 1) = (-1) ^ n * hat(w)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\cos{t} \\hat{w} - \\hat{w} + \\sin{t} \\hat{w} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3}",
                                "res": "cos(t) * hat(w) - hat(w) + sin(t) * hat(w) * hat(w) + hat(w) * unit_matrix(3)",
                                "rule": {
                                    "loc": "0.0",
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial at 0.0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\sin{t} \\hat{w} \\hat{w} + \\cos{t} \\hat{w}",
                                "res": "sin(t) * hat(w) * hat(w) + cos(t) * hat(w)",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\sin{t} (\\hat{w} \\hat{w}) + \\cos{t} \\hat{w}",
                                "res": "sin(t) * (hat(w) * hat(w)) + cos(t) * hat(w)",
                                "rule": {
                                    "latex_str": "rewriting \\(\\sin{t} \\hat{w} \\hat{w}\\) to \\(\\sin{t} (\\hat{w} \\hat{w})\\)",
                                    "name": "Equation",
                                    "new_expr": "sin(t) * (hat(w) * hat(w))",
                                    "old_expr": "sin(t) * hat(w) * hat(w)",
                                    "str": "rewriting sin(t) * hat(w) * hat(w) to sin(t) * (hat(w) * hat(w))"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\sin{t} \\hat{w} ^ {2} + \\cos{t} \\hat{w}",
                                "res": "sin(t) * hat(w) ^ 2 + cos(t) * hat(w)",
                                "rule": {
                                    "latex_str": "rewrite \\(\\hat{w} \\hat{w}\\) to \\(\\hat{w} ^ {2}\\) using identity",
                                    "name": "ApplyIdentity",
                                    "source": "hat(w) * hat(w)",
                                    "str": "rewrite hat(w) * hat(w) to hat(w) ^ 2 using identity",
                                    "target": "hat(w) ^ 2"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "(D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))",
                "latex_goal": "\\frac{d}{dt} e^{t \\hat{w}} = \\hat{w} e^{t \\hat{w}}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        },
        {
            "conds": [
                {
                    "cond": "norm(w) = 1",
                    "latex_cond": "\\|w\\| = 1"
                }
            ],
            "finished": true,
            "fixes": [
                [
                    "hmf",
                    "$fun($real, $tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "twist",
                    "$fun($tensor($real, 3, 1), $tensor($real, 3, 1), $tensor($real, 4, 4))"
                ],
                [
                    "w",
                    "$tensor($real, 3, 1)"
                ],
                [
                    "v",
                    "$tensor($real, 3, 1)"
                ]
            ],
            "goal": "(D t. hmf(t,w,v)) = twist(w,v) * hmf(t,w,v)",
            "latex_goal": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})} = twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                        "start": "D t. hmf(t,w,v)",
                        "steps": [
                            {
                                "latex_res": "\\frac{d}{dt} hm(e^{t \\hat{w}},(-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v)",
                                "res": "D t. hm(exp(t * hat(w)),(-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v)",
                                "rule": {
                                    "func_name": "hmf",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{d}{dt} \\begin{bmatrix}e^{t \\hat{w}}&(-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "D t. [[exp(t * hat(w)), (-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "func_name": "hm",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\frac{d}{dt} e^{t \\hat{w}}&-(\\frac{d}{dt} e^{t \\hat{w}}) \\hat{w} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[D t. exp(t * hat(w)), -((D t. exp(t * hat(w))) * hat(w) * v) + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-(\\frac{d}{dt} e^{t \\hat{w}}) \\hat{w} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -((D t. exp(t * hat(w))) * hat(w) * v) + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "eq": "(D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\frac{d}{dt} e^{t \\hat{w}} = \\hat{w} e^{t \\hat{w}}\\)",
                                    "name": "ApplyEquation",
                                    "source": "D t. exp(t * hat(w))",
                                    "str": "apply equation: (D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "eq": "(D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\frac{d}{dt} e^{t \\hat{w}} = \\hat{w} e^{t \\hat{w}}\\)",
                                    "name": "ApplyEquation",
                                    "source": "D t. exp(t * hat(w))",
                                    "str": "apply equation: (D t. exp(t * hat(w))) = hat(w) * exp(t * hat(w))"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                        "start": "twist(w,v) * hmf(t,w,v)",
                        "steps": [
                            {
                                "latex_res": "hat({\\begin{bmatrix}w\\\\v\\end{bmatrix}}) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                                "res": "hat([[w], [v]]) * hmf(t,w,v)",
                                "rule": {
                                    "func_name": "twist",
                                    "loc": "0",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "hat({\\begin{bmatrix}w\\\\v\\end{bmatrix}}) hm(e^{t \\hat{w}},(-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v)",
                                "res": "hat([[w], [v]]) * hm(exp(t * hat(w)),(-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v)",
                                "rule": {
                                    "func_name": "hmf",
                                    "loc": "1",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w}&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix} hm(e^{t \\hat{w}},(-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v)",
                                "res": "[[hat(w), v], [zero_matrix(1,3), zero_matrix(1,1)]] * hm(exp(t * hat(w)),(-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v)",
                                "rule": {
                                    "loc": "0",
                                    "name": "ExpandMatFunc",
                                    "str": "expand functions of matrices at 0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w}&v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix} \\begin{bmatrix}e^{t \\hat{w}}&(-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{1}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w), v], [zero_matrix(1,3), zero_matrix(1,1)]] * [[exp(t * hat(w)), (-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v], [zero_matrix(1,3), unit_matrix(1)]]",
                                "rule": {
                                    "func_name": "hm",
                                    "loc": "1",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition at 1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&\\hat{w} ((-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t w w^{\\text{T}} v) + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), hat(w) * ((-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * w * T(w) * v) + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&\\hat{w} (-e^{t \\hat{w}} + \\mathbf{1}_{3 \\times 3}) \\hat{w} v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), hat(w) * (-exp(t * hat(w)) + unit_matrix(3)) * hat(w) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "loc": "0.1.0",
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial at 0.1.0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&(-\\hat{w} e^{t \\hat{w}} \\hat{w} + \\hat{w} \\mathbf{1}_{3 \\times 3} \\hat{w}) v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), (-(hat(w) * exp(t * hat(w)) * hat(w)) + hat(w) * unit_matrix(3) * hat(w)) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "loc": "0.1.0.0.0",
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial at 0.1.0.0.0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&(-\\hat{w} e^{t \\hat{w}} \\hat{w} + \\hat{w} \\hat{w}) v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), (-(hat(w) * exp(t * hat(w)) * hat(w)) + hat(w) * hat(w)) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + \\hat{w} \\hat{w} v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + hat(w) * hat(w) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "loc": "0.1.0.0",
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial at 0.1.0.0"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + \\hat{w} ^ {2} v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + hat(w) ^ 2 * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "latex_str": "rewrite \\(\\hat{w} \\hat{w}\\) to \\(\\hat{w} ^ {2}\\) using identity",
                                    "name": "ApplyIdentity",
                                    "source": "hat(w) * hat(w)",
                                    "str": "rewrite hat(w) * hat(w) to hat(w) ^ 2 using identity",
                                    "target": "hat(w) ^ 2"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + (w w^{\\text{T}} - \\|w\\| ^ {2} \\mathbf{1}_{3 \\times 3}) v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + (w * T(w) - norm(w) ^ 2 * unit_matrix(3)) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "eq": "hat(w) ^ 2 = w * T(w) - norm(w) ^ 2 * unit_matrix(3)",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\hat{w} ^ {2} = w w^{\\text{T}} - \\|w\\| ^ {2} \\mathbf{1}_{3 \\times 3}\\)",
                                    "name": "ApplyEquation",
                                    "source": "hat(w) ^ 2",
                                    "str": "apply equation: hat(w) ^ 2 = w * T(w) - norm(w) ^ 2 * unit_matrix(3)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + (w w^{\\text{T}} - 1 ^ {2} \\mathbf{1}_{3 \\times 3}) v + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + (w * T(w) - 1 ^ 2 * unit_matrix(3)) * v + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "eq": "norm(w) = 1",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\|w\\| = 1\\)",
                                    "name": "ApplyEquation",
                                    "source": "norm(w)",
                                    "str": "apply equation: norm(w) = 1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + (w w^{\\text{T}} v - \\mathbf{1}_{3 \\times 3} v) + t \\hat{w} w w^{\\text{T}} v + v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + (w * T(w) * v - unit_matrix(3) * v) + t * hat(w) * w * T(w) * v + v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "loc": "0.1.0.0.1",
                                    "name": "ExpandPolynomial",
                                    "str": "expand polynomial at 0.1.0.0.1"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + t \\hat{w} w w^{\\text{T}} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + t * hat(w) * w * T(w) * v + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + t (\\hat{w} w) w^{\\text{T}} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + t * (hat(w) * w) * T(w) * v + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "latex_str": "rewriting \\(t \\hat{w} w w^{\\text{T}} v\\) to \\(t (\\hat{w} w) w^{\\text{T}} v\\)",
                                    "name": "Equation",
                                    "new_expr": "t * (hat(w) * w) * T(w) * v",
                                    "old_expr": "t * hat(w) * w * T(w) * v",
                                    "str": "rewriting t * hat(w) * w * T(w) * v to t * (hat(w) * w) * T(w) * v"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + t \\mathbf{0}_{3 \\times 1} w^{\\text{T}} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + t * zero_matrix(3,1) * T(w) * v + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "eq": "hat(w) * w = zero_matrix(3,1)",
                                    "eq_fixes": [],
                                    "latex_str": "apply equation \\(\\hat{w} w = \\mathbf{0}_{3 \\times 1}\\)",
                                    "name": "ApplyEquation",
                                    "source": "hat(w) * w",
                                    "str": "apply equation: hat(w) * w = zero_matrix(3,1)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\begin{bmatrix}\\hat{w} e^{t \\hat{w}}&-\\hat{w} e^{t \\hat{w}} \\hat{w} v + w w^{\\text{T}} v\\\\\\mathbf{0}_{1 \\times 3}&\\mathbf{0}_{1 \\times 1}\\end{bmatrix}",
                                "res": "[[hat(w) * exp(t * hat(w)), -(hat(w) * exp(t * hat(w)) * hat(w) * v) + w * T(w) * v], [zero_matrix(1,3), zero_matrix(1,1)]]",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "(D t. hmf(t,w,v)) = twist(w,v) * hmf(t,w,v)",
                "latex_goal": "\\frac{d}{dt} e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})} = twist(w,v) e^{that(\\begin{bmatrix}w\\\\v\\end{bmatrix})}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        }
    ],
    "name": "twist_derive_hmf"
}