{
    "content": [
        {
            "finished": false,
            "goal": "hat({w1, w2, w3}) ^ (2 * n + 1) = (-1) ^ n * hat({w1, w2, w3})",
            "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 1} = (-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
            "obligations": [
                {
                    "branches": [
                        {
                            "exprs": [
                                "hat({w1, w2, w3}) > 0"
                            ]
                        }
                    ],
                    "conds": []
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "isInt(2 * n + 1)"
                            ]
                        }
                    ],
                    "conds": []
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "2 * n + 1 >= 0"
                            ]
                        }
                    ],
                    "conds": []
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "-1 > 0"
                            ]
                        }
                    ],
                    "conds": []
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "isInt(n)"
                            ]
                        }
                    ],
                    "conds": []
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "n >= 0"
                            ]
                        }
                    ],
                    "conds": []
                }
            ],
            "proof": {
                "base_case": {
                    "finished": true,
                    "goal": "hat({w1, w2, w3}) = hat({w1, w2, w3})",
                    "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} = hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                    "proof": {
                        "calcs": [
                            {
                                "latex_start": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                                "start": "hat({w1, w2, w3})",
                                "steps": [],
                                "type": "Calculation"
                            },
                            {
                                "latex_start": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                                "start": "hat({w1, w2, w3})",
                                "steps": [],
                                "type": "Calculation"
                            }
                        ],
                        "finished": true,
                        "goal": "hat({w1, w2, w3}) = hat({w1, w2, w3})",
                        "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} = hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal"
                },
                "finished": false,
                "goal": "hat({w1, w2, w3}) ^ (2 * n + 1) = (-1) ^ n * hat({w1, w2, w3})",
                "induct_case": {
                    "finished": false,
                    "goal": "hat({w1, w2, w3}) ^ (2 * n + 3) = -((-1) ^ n * hat({w1, w2, w3}))",
                    "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 3} = -(-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                    "obligations": [
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "hat({w1, w2, w3}) > 0"
                                    ]
                                }
                            ],
                            "conds": []
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "isInt(2 * n + 3)"
                                    ]
                                }
                            ],
                            "conds": []
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "2 * n + 3 >= 0"
                                    ]
                                }
                            ],
                            "conds": []
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "-1 > 0"
                                    ]
                                }
                            ],
                            "conds": []
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "isInt(n)"
                                    ]
                                }
                            ],
                            "conds": []
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "n >= 0"
                                    ]
                                }
                            ],
                            "conds": []
                        }
                    ],
                    "proof": {
                        "calcs": [
                            {
                                "latex_start": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 3}",
                                "start": "hat({w1, w2, w3}) ^ (2 * n + 3)",
                                "steps": [
                                    {
                                        "latex_res": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 + (2 n + 1)}",
                                        "res": "hat({w1, w2, w3}) ^ (2 + (2 * n + 1))",
                                        "rule": {
                                            "latex_str": "rewriting \\(2 n + 3\\) to \\(2 + (2 n + 1)\\)",
                                            "name": "Equation",
                                            "new_expr": "2 + (2 * n + 1)",
                                            "old_expr": "2 * n + 3",
                                            "str": "rewriting 2 * n + 3 to 2 + (2 * n + 1)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 1}",
                                        "res": "hat({w1, w2, w3}) ^ 2 * hat({w1, w2, w3}) ^ (2 * n + 1)",
                                        "rule": {
                                            "latex_str": "rewrite \\(hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 + (2 n + 1)}\\) to \\(hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 1}\\) using identity",
                                            "name": "ApplyIdentity",
                                            "source": "hat({w1, w2, w3}) ^ (2 + (2 * n + 1))",
                                            "str": "rewrite hat({w1, w2, w3}) ^ (2 + (2 * n + 1)) to hat({w1, w2, w3}) ^ 2 * hat({w1, w2, w3}) ^ (2 * n + 1) using identity",
                                            "target": "hat({w1, w2, w3}) ^ 2 * hat({w1, w2, w3}) ^ (2 * n + 1)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2} ((-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})})",
                                        "res": "hat({w1, w2, w3}) ^ 2 * ((-1) ^ n * hat({w1, w2, w3}))",
                                        "rule": {
                                            "loc": "1",
                                            "name": "ApplyInductHyp",
                                            "str": "apply induction hypothesis at 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "(\\begin{bmatrix}w1&w2&w3\\end{bmatrix}^{\\text{T}} \\begin{bmatrix}w1&w2&w3\\end{bmatrix} - \\|\\begin{bmatrix}w1&w2&w3\\end{bmatrix}\\| ^ {2}\\cdot I_{3 \\times 3}) ((-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})})",
                                        "res": "(T({w1, w2, w3}) * {w1, w2, w3} - norm({w1, w2, w3}) ^ 2 * unit_matrix(3)) * ((-1) ^ n * hat({w1, w2, w3}))",
                                        "rule": {
                                            "eq": "hat({a1, a2, a3}) ^ 2 = T({a1, a2, a3}) * {a1, a2, a3} - norm({a1, a2, a3}) ^ 2 * unit_matrix(3)",
                                            "latex_str": "apply equation \\(hat{(\\begin{bmatrix}a1&a2&a3\\end{bmatrix})} ^ {2} = \\begin{bmatrix}a1&a2&a3\\end{bmatrix}^{\\text{T}} \\begin{bmatrix}a1&a2&a3\\end{bmatrix} - \\|\\begin{bmatrix}a1&a2&a3\\end{bmatrix}\\| ^ {2}\\cdot I_{3 \\times 3}\\) at 0",
                                            "loc": "0",
                                            "name": "ApplyEquation",
                                            "str": "apply equation: hat({a1, a2, a3}) ^ 2 = T({a1, a2, a3}) * {a1, a2, a3} - norm({a1, a2, a3}) ^ 2 * unit_matrix(3) at 0"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "-(-1) ^ {n}\\cdot I_{3 \\times 3} \\|\\begin{bmatrix}w1&w2&w3\\end{bmatrix}\\| ^ {2} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} + (-1) ^ {n} \\begin{bmatrix}w1&w2&w3\\end{bmatrix}^{\\text{T}} \\begin{bmatrix}w1&w2&w3\\end{bmatrix} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                                        "res": "-((-1) ^ n * unit_matrix(3) * norm({w1, w2, w3}) ^ 2 * hat({w1, w2, w3})) + (-1) ^ n * T({w1, w2, w3}) * {w1, w2, w3} * hat({w1, w2, w3})",
                                        "rule": {
                                            "name": "ExpandPolynomial",
                                            "str": "expand polynomial"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "-(-1) ^ {n}\\cdot I_{3 \\times 3} \\|\\begin{bmatrix}w1&w2&w3\\end{bmatrix}\\| ^ {2} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} + (-1) ^ {n} \\begin{bmatrix}w1&w2&w3\\end{bmatrix}^{\\text{T}} \\begin{bmatrix}w1&w2&w3\\end{bmatrix} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                                        "res": "-((-1) ^ n * unit_matrix(3) * norm({w1, w2, w3}) ^ 2 * hat({w1, w2, w3})) + (-1) ^ n * T({w1, w2, w3}) * {w1, w2, w3} * hat({w1, w2, w3})",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            },
                            {
                                "latex_start": "-(-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                                "start": "-((-1) ^ n * hat({w1, w2, w3}))",
                                "steps": [],
                                "type": "Calculation"
                            }
                        ],
                        "finished": false,
                        "goal": "hat({w1, w2, w3}) ^ (2 * n + 3) = -((-1) ^ n * hat({w1, w2, w3}))",
                        "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 3} = -(-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal",
                    "wellformed": false
                },
                "induct_var": "n",
                "latex_goal": "hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})} ^ {2 n + 1} = (-1) ^ {n} hat{(\\begin{bmatrix}w1&w2&w3\\end{bmatrix})}",
                "type": "InductionProof"
            },
            "type": "Goal",
            "wellformed": false
        }
    ],
    "name": "matrix_example03"
}