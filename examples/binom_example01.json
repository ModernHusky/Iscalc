{
    "content": [
        {
            "finished": true,
            "goal": "binom(n,m) = binom(n,n - m)",
            "latex_goal": "\\binom{n}{m} = \\binom{n}{n - m}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n}{m}",
                        "start": "binom(n,m)",
                        "steps": [
                            {
                                "latex_res": "\\frac{n!}{m! (-m + n)!}",
                                "res": "factorial(n) / (factorial(m) * factorial(-m + n))",
                                "rule": {
                                    "func_name": "binom",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n}{n - m}",
                        "start": "binom(n,n - m)",
                        "steps": [
                            {
                                "latex_res": "\\frac{n!}{m! (-m + n)!}",
                                "res": "factorial(n) / (factorial(m) * factorial(-m + n))",
                                "rule": {
                                    "func_name": "binom",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "binom(n,m) = binom(n,n - m)",
                "latex_goal": "\\binom{n}{m} = \\binom{n}{n - m}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        },
        {
            "finished": true,
            "goal": "binom(n,m) * binom(m,r) = binom(n,r) * binom(n - r,m - r)",
            "latex_goal": "\\binom{n}{m} \\binom{m}{r} = \\binom{n}{r} \\binom{n - r}{m - r}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n}{m} \\binom{m}{r}",
                        "start": "binom(n,m) * binom(m,r)",
                        "steps": [
                            {
                                "latex_res": "\\frac{n!}{m! (-m + n)!} (\\frac{m!}{r! (m - r)!})",
                                "res": "factorial(n) / (factorial(m) * factorial(-m + n)) * (factorial(m) / (factorial(r) * factorial(m - r)))",
                                "rule": {
                                    "func_name": "binom",
                                    "loc": "subterms",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition on subterms"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n!}{r! (m - r)! (-m + n)!}",
                                "res": "factorial(n) / (factorial(r) * factorial(m - r) * factorial(-m + n))",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n}{r} \\binom{n - r}{m - r}",
                        "start": "binom(n,r) * binom(n - r,m - r)",
                        "steps": [
                            {
                                "latex_res": "\\frac{n!}{r! (n - r)!} (\\frac{(n - r)!}{(m - r)! (-m + n)!})",
                                "res": "factorial(n) / (factorial(r) * factorial(n - r)) * (factorial(n - r) / (factorial(m - r) * factorial(-m + n)))",
                                "rule": {
                                    "func_name": "binom",
                                    "loc": "subterms",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition on subterms"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n!}{r! (m - r)! (-m + n)!}",
                                "res": "factorial(n) / (factorial(r) * factorial(m - r) * factorial(-m + n))",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "binom(n,m) * binom(m,r) = binom(n,r) * binom(n - r,m - r)",
                "latex_goal": "\\binom{n}{m} \\binom{m}{r} = \\binom{n}{r} \\binom{n - r}{m - r}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        },
        {
            "finished": true,
            "goal": "binom(n,m - 1) + binom(n,m) = binom(n + 1,m)",
            "latex_goal": "\\binom{n}{m - 1} + \\binom{n}{m} = \\binom{n + 1}{m}",
            "proof": {
                "calcs": [
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n}{m - 1} + \\binom{n}{m}",
                        "start": "binom(n,m - 1) + binom(n,m)",
                        "steps": [
                            {
                                "latex_res": "\\frac{n!}{(m - 1)! (-m + n + 1)!} + \\frac{n!}{m! (-m + n)!}",
                                "res": "factorial(n) / (factorial(m - 1) * factorial(-m + n + 1)) + factorial(n) / (factorial(m) * factorial(-m + n))",
                                "rule": {
                                    "func_name": "binom",
                                    "loc": "subterms",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition on subterms"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n! m}{(m - 1 + 1) (m - 1)! (-m + n + 1)!} + \\frac{n!}{m! (-m + n)!}",
                                "res": "factorial(n) * m / ((m - 1 + 1) * factorial(m - 1) * factorial(-m + n + 1)) + factorial(n) / (factorial(m) * factorial(-m + n))",
                                "rule": {
                                    "latex_str": "rewriting \\(\\frac{n!}{(m - 1)! (-m + n + 1)!}\\) to \\(\\frac{n! m}{(m - 1 + 1) (m - 1)! (-m + n + 1)!}\\)",
                                    "name": "Equation",
                                    "new_expr": "factorial(n) * m / ((m - 1 + 1) * factorial(m - 1) * factorial(-m + n + 1))",
                                    "old_expr": "factorial(n) / (factorial(m - 1) * factorial(-m + n + 1))",
                                    "str": "rewriting factorial(n) / (factorial(m - 1) * factorial(-m + n + 1)) to factorial(n) * m / ((m - 1 + 1) * factorial(m - 1) * factorial(-m + n + 1))"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n! m}{(m - 1 + 1) (m - 1)! (-m + n + 1)!} + \\frac{n! (-m + n + 1)}{m! ((-m + n + 1) (-m + n)!)}",
                                "res": "factorial(n) * m / ((m - 1 + 1) * factorial(m - 1) * factorial(-m + n + 1)) + factorial(n) * (-m + n + 1) / (factorial(m) * ((-m + n + 1) * factorial(-m + n)))",
                                "rule": {
                                    "latex_str": "rewriting \\(\\frac{n!}{m! (-m + n)!}\\) to \\(\\frac{n! (-m + n + 1)}{m! ((-m + n + 1) (-m + n)!)}\\)",
                                    "name": "Equation",
                                    "new_expr": "factorial(n) * (-m + n + 1) / (factorial(m) * ((-m + n + 1) * factorial(-m + n)))",
                                    "old_expr": "factorial(n) / (factorial(m) * factorial(-m + n))",
                                    "str": "rewriting factorial(n) / (factorial(m) * factorial(-m + n)) to factorial(n) * (-m + n + 1) / (factorial(m) * ((-m + n + 1) * factorial(-m + n)))"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n! m}{(m - 1 + 1) (m - 1)! (-m + n + 1)!} + \\frac{n! (-m + n + 1)}{m! (-m + n + 1)!}",
                                "res": "factorial(n) * m / ((m - 1 + 1) * factorial(m - 1) * factorial(-m + n + 1)) + factorial(n) * (-m + n + 1) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "latex_str": "rewrite \\((-m + n + 1) (-m + n)!\\) to \\((-m + n + 1)!\\) using identity at 1.1.1",
                                    "loc": "1.1.1",
                                    "name": "ApplyIdentity",
                                    "source": "(-m + n + 1) * factorial(-m + n)",
                                    "str": "rewrite (-m + n + 1) * factorial(-m + n) to factorial(-m + n + 1) using identity at 1.1.1",
                                    "target": "factorial(-m + n + 1)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n! m}{(m - 1 + 1)! (-m + n + 1)!} + \\frac{n! (-m + n + 1)}{m! (-m + n + 1)!}",
                                "res": "factorial(n) * m / (factorial(m - 1 + 1) * factorial(-m + n + 1)) + factorial(n) * (-m + n + 1) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "latex_str": "rewrite \\((m - 1 + 1) (m - 1)!\\) to \\((m - 1 + 1)!\\) using identity at 0.1.0",
                                    "loc": "0.1.0",
                                    "name": "ApplyIdentity",
                                    "source": "(m - 1 + 1) * factorial(m - 1)",
                                    "str": "rewrite (m - 1 + 1) * factorial(m - 1) to factorial(m - 1 + 1) using identity at 0.1.0",
                                    "target": "factorial(m - 1 + 1)"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{n! (-m + n + 1)}{m! (-m + n + 1)!} + \\frac{m n!}{m! (-m + n + 1)!}",
                                "res": "factorial(n) * (-m + n + 1) / (factorial(m) * factorial(-m + n + 1)) + m * factorial(n) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "name": "FullSimplify",
                                    "str": "full simplify"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{(n + 1) n!}{m! (-m + n + 1)!}",
                                "res": "(n + 1) * factorial(n) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "latex_str": "rewriting \\(\\frac{n! (-m + n + 1)}{m! (-m + n + 1)!} + \\frac{m n!}{m! (-m + n + 1)!}\\) to \\(\\frac{(n + 1) n!}{m! (-m + n + 1)!}\\)",
                                    "name": "Equation",
                                    "new_expr": "(n + 1) * factorial(n) / (factorial(m) * factorial(-m + n + 1))",
                                    "old_expr": "factorial(n) * (-m + n + 1) / (factorial(m) * factorial(-m + n + 1)) + m * factorial(n) / (factorial(m) * factorial(-m + n + 1))",
                                    "str": "rewriting factorial(n) * (-m + n + 1) / (factorial(m) * factorial(-m + n + 1)) + m * factorial(n) / (factorial(m) * factorial(-m + n + 1)) to (n + 1) * factorial(n) / (factorial(m) * factorial(-m + n + 1))"
                                },
                                "type": "CalculationStep"
                            },
                            {
                                "latex_res": "\\frac{(n + 1)!}{m! (-m + n + 1)!}",
                                "res": "factorial(n + 1) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "latex_str": "rewrite \\((n + 1) n!\\) to \\((n + 1)!\\) using identity at 0",
                                    "loc": "0",
                                    "name": "ApplyIdentity",
                                    "source": "(n + 1) * factorial(n)",
                                    "str": "rewrite (n + 1) * factorial(n) to factorial(n + 1) using identity at 0",
                                    "target": "factorial(n + 1)"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    },
                    {
                        "fixes": [],
                        "latex_start": "\\binom{n + 1}{m}",
                        "start": "binom(n + 1,m)",
                        "steps": [
                            {
                                "latex_res": "\\frac{(n + 1)!}{m! (-m + n + 1)!}",
                                "res": "factorial(n + 1) / (factorial(m) * factorial(-m + n + 1))",
                                "rule": {
                                    "func_name": "binom",
                                    "loc": "subterms",
                                    "name": "ExpandDefinition",
                                    "str": "expand definition on subterms"
                                },
                                "type": "CalculationStep"
                            }
                        ],
                        "type": "Calculation"
                    }
                ],
                "finished": true,
                "goal": "binom(n,m - 1) + binom(n,m) = binom(n + 1,m)",
                "latex_goal": "\\binom{n}{m - 1} + \\binom{n}{m} = \\binom{n + 1}{m}",
                "type": "CalculationProof"
            },
            "type": "Goal"
        },
        {
            "conds": [
                {
                    "cond": "m >= 0",
                    "latex_cond": "m \\ge 0"
                },
                {
                    "cond": "n >= 0",
                    "latex_cond": "n \\ge 0"
                }
            ],
            "finished": true,
            "fixes": [
                [
                    "m",
                    [
                        "$int"
                    ]
                ],
                [
                    "n",
                    [
                        "$int"
                    ]
                ],
                [
                    "i",
                    [
                        "$int"
                    ]
                ]
            ],
            "goal": "binom(m + n + 1,m) = SUM(i, 0, m, binom(n + i,i))",
            "latex_goal": "\\binom{m + n + 1}{m} = \\sum_{i=0}^{m}{\\binom{n + i}{i}}",
            "proof": {
                "base_case": {
                    "finished": true,
                    "fixes": [
                        [
                            "m",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "n",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "i",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "cosh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "sinh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "binom",
                            [
                                "$fun($real, $real, $real)"
                            ]
                        ]
                    ],
                    "goal": "binom(n + 1,0) = binom(n,0)",
                    "latex_goal": "\\binom{n + 1}{0} = \\binom{n}{0}",
                    "proof": {
                        "calcs": [
                            {
                                "fixes": [],
                                "latex_start": "\\binom{n + 1}{0}",
                                "start": "binom(n + 1,0)",
                                "steps": [
                                    {
                                        "latex_res": "1",
                                        "res": "1",
                                        "rule": {
                                            "func_name": "binom",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            },
                            {
                                "fixes": [],
                                "latex_start": "\\binom{n}{0}",
                                "start": "binom(n,0)",
                                "steps": [
                                    {
                                        "latex_res": "1",
                                        "res": "1",
                                        "rule": {
                                            "func_name": "binom",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            }
                        ],
                        "finished": true,
                        "goal": "binom(n + 1,0) = binom(n,0)",
                        "latex_goal": "\\binom{n + 1}{0} = \\binom{n}{0}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal"
                },
                "finished": true,
                "goal": "binom(m + n + 1,m) = SUM(i, 0, m, binom(n + i,i))",
                "induct_case": {
                    "finished": true,
                    "fixes": [
                        [
                            "m",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "n",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "i",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "cosh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "sinh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "binom",
                            [
                                "$fun($real, $real, $real)"
                            ]
                        ]
                    ],
                    "goal": "binom(m + n + 2,m + 1) = SUM(i, 0, m + 1, binom(i + n,i))",
                    "latex_goal": "\\binom{m + n + 2}{m + 1} = \\sum_{i=0}^{m + 1}{\\binom{i + n}{i}}",
                    "proof": {
                        "calcs": [
                            {
                                "fixes": [],
                                "latex_start": "\\binom{m + n + 2}{m + 1}",
                                "start": "binom(m + n + 2,m + 1)",
                                "steps": [],
                                "type": "Calculation"
                            },
                            {
                                "fixes": [],
                                "latex_start": "\\sum_{i=0}^{m + 1}{\\binom{i + n}{i}}",
                                "start": "SUM(i, 0, m + 1, binom(i + n,i))",
                                "steps": [
                                    {
                                        "latex_res": "\\sum_{j=0}^{m + 1 - 1}{\\binom{j + n}{j}} + \\binom{m + 1 + n}{m + 1}",
                                        "res": "SUM(j, 0, m + 1 - 1, binom(j + n,j)) + binom(m + 1 + n,m + 1)",
                                        "rule": {
                                            "cond": "i = m + 1",
                                            "latex_str": "split item on \\(i = m + 1\\)",
                                            "name": "SplitItem",
                                            "str": "split item on i = m + 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 1}{m + 1} + \\sum_{j=0}^{m}{\\binom{j + n}{j}}",
                                        "res": "binom(m + n + 1,m + 1) + SUM(j, 0, m, binom(j + n,j))",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 1}{m + 1} + \\sum_{j=0}^{m}{\\binom{n + j}{j}}",
                                        "res": "binom(m + n + 1,m + 1) + SUM(j, 0, m, binom(n + j,j))",
                                        "rule": {
                                            "latex_str": "rewriting \\(j + n\\) to \\(n + j\\)",
                                            "name": "Equation",
                                            "new_expr": "n + j",
                                            "old_expr": "j + n",
                                            "str": "rewriting j + n to n + j"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 1}{m + 1} + \\binom{m + n + 1}{m}",
                                        "res": "binom(m + n + 1,m + 1) + binom(m + n + 1,m)",
                                        "rule": {
                                            "loc": "1",
                                            "name": "ApplyInductHyp",
                                            "str": "apply induction hypothesis at 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 1}{m + 1 - 1} + \\binom{m + n + 1}{m + 1}",
                                        "res": "binom(m + n + 1,m + 1 - 1) + binom(m + n + 1,m + 1)",
                                        "rule": {
                                            "latex_str": "rewriting \\(\\binom{m + n + 1}{m + 1} + \\binom{m + n + 1}{m}\\) to \\(\\binom{m + n + 1}{m + 1 - 1} + \\binom{m + n + 1}{m + 1}\\)",
                                            "name": "Equation",
                                            "new_expr": "binom(m + n + 1,m + 1 - 1) + binom(m + n + 1,m + 1)",
                                            "old_expr": "binom(m + n + 1,m + 1) + binom(m + n + 1,m)",
                                            "str": "rewriting binom(m + n + 1,m + 1) + binom(m + n + 1,m) to binom(m + n + 1,m + 1 - 1) + binom(m + n + 1,m + 1)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 1 + 1}{m + 1}",
                                        "res": "binom(m + n + 1 + 1,m + 1)",
                                        "rule": {
                                            "eq": "binom(n,m - 1) + binom(n,m) = binom(n + 1,m)",
                                            "eq_fixes": [],
                                            "latex_str": "apply equation \\(\\binom{n}{m - 1} + \\binom{n}{m} = \\binom{n + 1}{m}\\)",
                                            "name": "ApplyEquation",
                                            "source": "binom(m + n + 1,m + 1 - 1) + binom(m + n + 1,m + 1)",
                                            "str": "apply equation: binom(n,m - 1) + binom(n,m) = binom(n + 1,m)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\binom{m + n + 2}{m + 1}",
                                        "res": "binom(m + n + 2,m + 1)",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            }
                        ],
                        "finished": true,
                        "goal": "binom(m + n + 2,m + 1) = SUM(i, 0, m + 1, binom(i + n,i))",
                        "latex_goal": "\\binom{m + n + 2}{m + 1} = \\sum_{i=0}^{m + 1}{\\binom{i + n}{i}}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal"
                },
                "induct_var": "m",
                "latex_goal": "\\binom{m + n + 1}{m} = \\sum_{i=0}^{m}{\\binom{n + i}{i}}",
                "start": "0",
                "type": "InductionProof"
            },
            "type": "Goal"
        },
        {
            "conds": [
                {
                    "cond": "x != 0",
                    "latex_cond": "x \\neq 0"
                },
                {
                    "cond": "y != 0",
                    "latex_cond": "y \\neq 0"
                },
                {
                    "cond": "n > 0",
                    "latex_cond": "n > 0"
                }
            ],
            "finished": true,
            "fixes": [
                [
                    "m",
                    [
                        "$int"
                    ]
                ],
                [
                    "n",
                    [
                        "$int"
                    ]
                ],
                [
                    "k",
                    [
                        "$int"
                    ]
                ]
            ],
            "goal": "(x + y) ^ n = SUM(k, 0, n, binom(n,k) * x ^ k * y ^ (n - k))",
            "latex_goal": "(x + y) ^ {n} = \\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k} y ^ {n - k}}",
            "obligations": [
                {
                    "branches": [
                        {
                            "exprs": [
                                "x + y > 0"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        }
                    ]
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "isInt(n)"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        }
                    ]
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "n >= 0"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        }
                    ]
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "y > 0"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        },
                        {
                            "cond": "k >= 0",
                            "latex_cond": "k \\ge 0"
                        },
                        {
                            "cond": "k <= n",
                            "latex_cond": "k \\le n"
                        },
                        {
                            "cond": "n - k >= 0",
                            "latex_cond": "n - k \\ge 0"
                        },
                        {
                            "cond": "isInt(k)",
                            "latex_cond": "k \\in\\mathbb{Z}"
                        }
                    ]
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "isInt(n - k)"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        },
                        {
                            "cond": "k >= 0",
                            "latex_cond": "k \\ge 0"
                        },
                        {
                            "cond": "k <= n",
                            "latex_cond": "k \\le n"
                        },
                        {
                            "cond": "n - k >= 0",
                            "latex_cond": "n - k \\ge 0"
                        },
                        {
                            "cond": "isInt(k)",
                            "latex_cond": "k \\in\\mathbb{Z}"
                        }
                    ]
                },
                {
                    "branches": [
                        {
                            "exprs": [
                                "n - k >= 0"
                            ]
                        }
                    ],
                    "conds": [
                        {
                            "cond": "x != 0",
                            "latex_cond": "x \\neq 0"
                        },
                        {
                            "cond": "y != 0",
                            "latex_cond": "y \\neq 0"
                        },
                        {
                            "cond": "n > 0",
                            "latex_cond": "n > 0"
                        },
                        {
                            "cond": "k >= 0",
                            "latex_cond": "k \\ge 0"
                        },
                        {
                            "cond": "k <= n",
                            "latex_cond": "k \\le n"
                        },
                        {
                            "cond": "n - k >= 0",
                            "latex_cond": "n - k \\ge 0"
                        },
                        {
                            "cond": "isInt(k)",
                            "latex_cond": "k \\in\\mathbb{Z}"
                        }
                    ]
                }
            ],
            "proof": {
                "base_case": {
                    "finished": true,
                    "fixes": [
                        [
                            "m",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "n",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "k",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "cosh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "sinh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "binom",
                            [
                                "$fun($real, $real, $real)"
                            ]
                        ]
                    ],
                    "goal": "x + y = SUM(k, 0, 1, x ^ k * y ^ (-k + 1) * binom(1,k))",
                    "latex_goal": "x + y = \\sum_{k=0}^{1}{x ^ {k} y ^ {-k + 1} \\binom{1}{k}}",
                    "obligations": [
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "y > 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= 1",
                                    "latex_cond": "k \\le 1"
                                },
                                {
                                    "cond": "1 - k >= 0",
                                    "latex_cond": "1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "isInt(-k + 1)"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= 1",
                                    "latex_cond": "k \\le 1"
                                },
                                {
                                    "cond": "1 - k >= 0",
                                    "latex_cond": "1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "-k + 1 >= 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= 1",
                                    "latex_cond": "k \\le 1"
                                },
                                {
                                    "cond": "1 - k >= 0",
                                    "latex_cond": "1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        }
                    ],
                    "proof": {
                        "calcs": [
                            {
                                "fixes": [],
                                "latex_start": "x + y",
                                "start": "x + y",
                                "steps": [],
                                "type": "Calculation"
                            },
                            {
                                "fixes": [],
                                "latex_start": "\\sum_{k=0}^{1}{x ^ {k} y ^ {-k + 1} \\binom{1}{k}}",
                                "start": "SUM(k, 0, 1, x ^ k * y ^ (-k + 1) * binom(1,k))",
                                "steps": [
                                    {
                                        "latex_res": "x ^ {0} y ^ {-0 + 1}\\cdot \\binom{1}{0} + \\sum_{n=0 + 1}^{1}{x ^ {n} y ^ {-n + 1} \\binom{1}{n}}",
                                        "res": "x ^ 0 * y ^ (-0 + 1) * binom(1,0) + SUM(n, 0 + 1, 1, x ^ n * y ^ (-n + 1) * binom(1,n))",
                                        "rule": {
                                            "cond": "k = 0",
                                            "latex_str": "split item on \\(k = 0\\)",
                                            "name": "SplitItem",
                                            "str": "split item on k = 0"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x + y",
                                        "res": "x + y",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x + y",
                                        "res": "x + y",
                                        "rule": {
                                            "func_name": "binom",
                                            "loc": "subterms",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition on subterms"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x + y",
                                        "res": "x + y",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            }
                        ],
                        "finished": true,
                        "goal": "x + y = SUM(k, 0, 1, x ^ k * y ^ (-k + 1) * binom(1,k))",
                        "latex_goal": "x + y = \\sum_{k=0}^{1}{x ^ {k} y ^ {-k + 1} \\binom{1}{k}}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal",
                    "wellformed": false
                },
                "finished": true,
                "goal": "(x + y) ^ n = SUM(k, 0, n, binom(n,k) * x ^ k * y ^ (n - k))",
                "induct_case": {
                    "finished": true,
                    "fixes": [
                        [
                            "m",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "n",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "k",
                            [
                                "$int"
                            ]
                        ],
                        [
                            "cosh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "sinh",
                            [
                                "$fun($real, $real)"
                            ]
                        ],
                        [
                            "binom",
                            [
                                "$fun($real, $real, $real)"
                            ]
                        ]
                    ],
                    "goal": "(x + y) ^ (n + 1) = SUM(k, 0, n + 1, x ^ k * y ^ (-k + n + 1) * binom(n + 1,k))",
                    "latex_goal": "(x + y) ^ {n + 1} = \\sum_{k=0}^{n + 1}{x ^ {k} y ^ {-k + n + 1} \\binom{n + 1}{k}}",
                    "obligations": [
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "x + y > 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "isInt(n + 1)"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "n + 1 >= 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "y > 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= n + 1",
                                    "latex_cond": "k \\le n + 1"
                                },
                                {
                                    "cond": "n + 1 - k >= 0",
                                    "latex_cond": "n + 1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "isInt(-k + n + 1)"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= n + 1",
                                    "latex_cond": "k \\le n + 1"
                                },
                                {
                                    "cond": "n + 1 - k >= 0",
                                    "latex_cond": "n + 1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        },
                        {
                            "branches": [
                                {
                                    "exprs": [
                                        "-k + n + 1 >= 0"
                                    ]
                                }
                            ],
                            "conds": [
                                {
                                    "cond": "x != 0",
                                    "latex_cond": "x \\neq 0"
                                },
                                {
                                    "cond": "y != 0",
                                    "latex_cond": "y \\neq 0"
                                },
                                {
                                    "cond": "n > 0",
                                    "latex_cond": "n > 0"
                                },
                                {
                                    "cond": "k >= 0",
                                    "latex_cond": "k \\ge 0"
                                },
                                {
                                    "cond": "k <= n + 1",
                                    "latex_cond": "k \\le n + 1"
                                },
                                {
                                    "cond": "n + 1 - k >= 0",
                                    "latex_cond": "n + 1 - k \\ge 0"
                                },
                                {
                                    "cond": "isInt(k)",
                                    "latex_cond": "k \\in\\mathbb{Z}"
                                }
                            ]
                        }
                    ],
                    "proof": {
                        "calcs": [
                            {
                                "fixes": [],
                                "latex_start": "(x + y) ^ {n + 1}",
                                "start": "(x + y) ^ (n + 1)",
                                "steps": [
                                    {
                                        "latex_res": "(x + y) (x + y) ^ {n}",
                                        "res": "(x + y) * (x + y) ^ n",
                                        "rule": {
                                            "latex_str": "rewriting \\((x + y) ^ {n + 1}\\) to \\((x + y) (x + y) ^ {n}\\)",
                                            "name": "Equation",
                                            "new_expr": "(x + y) * (x + y) ^ n",
                                            "old_expr": "(x + y) ^ (n + 1)",
                                            "str": "rewriting (x + y) ^ (n + 1) to (x + y) * (x + y) ^ n"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "(x + y) \\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k} y ^ {n - k}}",
                                        "res": "(x + y) * SUM(k, 0, n, binom(n,k) * x ^ k * y ^ (n - k))",
                                        "rule": {
                                            "loc": "1",
                                            "name": "ApplyInductHyp",
                                            "str": "apply induction hypothesis at 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x \\sum_{k=0}^{n}{x ^ {k} y ^ {-k + n} \\binom{n}{k}} + y \\sum_{k=0}^{n}{x ^ {k} y ^ {-k + n} \\binom{n}{k}}",
                                        "res": "x * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k)) + y * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k))",
                                        "rule": {
                                            "name": "ExpandPolynomial",
                                            "str": "expand polynomial"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{k=0}^{n}{x (x ^ {k} y ^ {-k + n} \\binom{n}{k})} + y \\sum_{k=0}^{n}{x ^ {k} y ^ {-k + n} \\binom{n}{k}}",
                                        "res": "SUM(k, 0, n, x * (x ^ k * y ^ (-k + n) * binom(n,k))) + y * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k))",
                                        "rule": {
                                            "latex_str": "rewriting \\(x \\sum_{k=0}^{n}{x ^ {k} y ^ {-k + n} \\binom{n}{k}}\\) to \\(\\sum_{k=0}^{n}{x (x ^ {k} y ^ {-k + n} \\binom{n}{k})}\\)",
                                            "name": "Equation",
                                            "new_expr": "SUM(k, 0, n, x * (x ^ k * y ^ (-k + n) * binom(n,k)))",
                                            "old_expr": "x * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k))",
                                            "str": "rewriting x * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k)) to SUM(k, 0, n, x * (x ^ k * y ^ (-k + n) * binom(n,k)))"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{k=0}^{n}{x (x ^ {k} y ^ {-k + n} \\binom{n}{k})} + \\sum_{k=0}^{n}{y (x ^ {k} y ^ {-k + n} \\binom{n}{k})}",
                                        "res": "SUM(k, 0, n, x * (x ^ k * y ^ (-k + n) * binom(n,k))) + SUM(k, 0, n, y * (x ^ k * y ^ (-k + n) * binom(n,k)))",
                                        "rule": {
                                            "latex_str": "rewriting \\(y \\sum_{k=0}^{n}{x ^ {k} y ^ {-k + n} \\binom{n}{k}}\\) to \\(\\sum_{k=0}^{n}{y (x ^ {k} y ^ {-k + n} \\binom{n}{k})}\\)",
                                            "name": "Equation",
                                            "new_expr": "SUM(k, 0, n, y * (x ^ k * y ^ (-k + n) * binom(n,k)))",
                                            "old_expr": "y * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k))",
                                            "str": "rewriting y * SUM(k, 0, n, x ^ k * y ^ (-k + n) * binom(n,k)) to SUM(k, 0, n, y * (x ^ k * y ^ (-k + n) * binom(n,k)))"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k + 1} y ^ {n - k}} + \\sum_{k=0}^{n}{y (x ^ {k} y ^ {-k + n} \\binom{n}{k})}",
                                        "res": "SUM(k, 0, n, binom(n,k) * x ^ (k + 1) * y ^ (n - k)) + SUM(k, 0, n, y * (x ^ k * y ^ (-k + n) * binom(n,k)))",
                                        "rule": {
                                            "latex_str": "rewriting \\(x (x ^ {k} y ^ {-k + n} \\binom{n}{k})\\) to \\(\\binom{n}{k} x ^ {k + 1} y ^ {n - k}\\)",
                                            "name": "Equation",
                                            "new_expr": "binom(n,k) * x ^ (k + 1) * y ^ (n - k)",
                                            "old_expr": "x * (x ^ k * y ^ (-k + n) * binom(n,k))",
                                            "str": "rewriting x * (x ^ k * y ^ (-k + n) * binom(n,k)) to binom(n,k) * x ^ (k + 1) * y ^ (n - k)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k + 1} y ^ {n - k}} + \\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k} y ^ {n - k + 1}}",
                                        "res": "SUM(k, 0, n, binom(n,k) * x ^ (k + 1) * y ^ (n - k)) + SUM(k, 0, n, binom(n,k) * x ^ k * y ^ (n - k + 1))",
                                        "rule": {
                                            "latex_str": "rewriting \\(y (x ^ {k} y ^ {-k + n} \\binom{n}{k})\\) to \\(\\binom{n}{k} x ^ {k} y ^ {n - k + 1}\\)",
                                            "name": "Equation",
                                            "new_expr": "binom(n,k) * x ^ k * y ^ (n - k + 1)",
                                            "old_expr": "y * (x ^ k * y ^ (-k + n) * binom(n,k))",
                                            "str": "rewriting y * (x ^ k * y ^ (-k + n) * binom(n,k)) to binom(n,k) * x ^ k * y ^ (n - k + 1)"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=0}^{n - 1}{\\binom{n}{i} x ^ {i + 1} y ^ {n - i}} + \\binom{n}{n} x ^ {n + 1} y ^ {n - n} + \\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k} y ^ {n - k + 1}}",
                                        "res": "SUM(i, 0, n - 1, binom(n,i) * x ^ (i + 1) * y ^ (n - i)) + binom(n,n) * x ^ (n + 1) * y ^ (n - n) + SUM(k, 0, n, binom(n,k) * x ^ k * y ^ (n - k + 1))",
                                        "rule": {
                                            "cond": "k = n",
                                            "latex_str": "split item on \\(k = n\\) at 0",
                                            "loc": "0",
                                            "name": "SplitItem",
                                            "str": "split item on k = n at 0"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=0}^{n - 1}{\\binom{n}{i} x ^ {i + 1} y ^ {n - i}} + \\binom{n}{n} x ^ {n + 1} y ^ {n - n} + (\\binom{n}{0} x ^ {0} y ^ {n - 0 + 1} + \\sum_{i=0 + 1}^{n}{\\binom{n}{i} x ^ {i} y ^ {n - i + 1}})",
                                        "res": "SUM(i, 0, n - 1, binom(n,i) * x ^ (i + 1) * y ^ (n - i)) + binom(n,n) * x ^ (n + 1) * y ^ (n - n) + (binom(n,0) * x ^ 0 * y ^ (n - 0 + 1) + SUM(i, 0 + 1, n, binom(n,i) * x ^ i * y ^ (n - i + 1)))",
                                        "rule": {
                                            "cond": "k = 0",
                                            "latex_str": "split item on \\(k = 0\\) at 1",
                                            "loc": "1",
                                            "name": "SplitItem",
                                            "str": "split item on k = 0 at 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=0}^{n - 1}{x ^ {i + 1} y ^ {-i + n} \\binom{n}{i}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1} \\binom{n}{n} + y ^ {n + 1} \\binom{n}{0}",
                                        "res": "SUM(i, 0, n - 1, x ^ (i + 1) * y ^ (-i + n) * binom(n,i)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) * binom(n,n) + y ^ (n + 1) * binom(n,0)",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=0}^{n - 1}{x ^ {i + 1} y ^ {-i + n} \\binom{n}{i}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1}\\cdot 1 + y ^ {n + 1} \\binom{n}{0}",
                                        "res": "SUM(i, 0, n - 1, x ^ (i + 1) * y ^ (-i + n) * binom(n,i)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) * 1 + y ^ (n + 1) * binom(n,0)",
                                        "rule": {
                                            "func_name": "binom",
                                            "loc": "0.1.1",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition at 0.1.1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=0}^{n - 1}{x ^ {i + 1} y ^ {-i + n} \\binom{n}{i}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1}\\cdot 1 + y ^ {n + 1}\\cdot 1",
                                        "res": "SUM(i, 0, n - 1, x ^ (i + 1) * y ^ (-i + n) * binom(n,i)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) * 1 + y ^ (n + 1) * 1",
                                        "rule": {
                                            "func_name": "binom",
                                            "loc": "1.1",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition at 1.1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=1}^{n}{x ^ {i - 1 + 1} y ^ {-(i - 1) + n} \\binom{n}{i - 1}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1}\\cdot 1 + y ^ {n + 1}\\cdot 1",
                                        "res": "SUM(i, 1, n, x ^ (i - 1 + 1) * y ^ (-(i - 1) + n) * binom(n,i - 1)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) * 1 + y ^ (n + 1) * 1",
                                        "rule": {
                                            "loc": "0.0.0",
                                            "name": "ChangeSummationIndex",
                                            "new_lower": "1",
                                            "str": "change summation index at 0.0.0"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i - 1}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1} + y ^ {n + 1}",
                                        "res": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) + y ^ (n + 1)",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i - 1} + x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}} + x ^ {n + 1} + y ^ {n + 1}",
                                        "res": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1) + x ^ i * y ^ (-i + n + 1) * binom(n,i)) + x ^ (n + 1) + y ^ (n + 1)",
                                        "rule": {
                                            "latex_str": "rewriting \\(\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i - 1}} + \\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}}\\) to \\(\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n}{i - 1} + x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}}\\)",
                                            "name": "Equation",
                                            "new_expr": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1) + x ^ i * y ^ (-i + n + 1) * binom(n,i))",
                                            "old_expr": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i))",
                                            "str": "rewriting SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1)) + SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i)) to SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n,i - 1) + x ^ i * y ^ (-i + n + 1) * binom(n,i))"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} (\\binom{n}{i - 1} + \\binom{n}{i})} + x ^ {n + 1} + y ^ {n + 1}",
                                        "res": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * (binom(n,i - 1) + binom(n,i))) + x ^ (n + 1) + y ^ (n + 1)",
                                        "rule": {
                                            "latex_str": "rewriting \\(x ^ {i} y ^ {-i + n + 1} \\binom{n}{i - 1} + x ^ {i} y ^ {-i + n + 1} \\binom{n}{i}\\) to \\(x ^ {i} y ^ {-i + n + 1} (\\binom{n}{i - 1} + \\binom{n}{i})\\)",
                                            "name": "Equation",
                                            "new_expr": "x ^ i * y ^ (-i + n + 1) * (binom(n,i - 1) + binom(n,i))",
                                            "old_expr": "x ^ i * y ^ (-i + n + 1) * binom(n,i - 1) + x ^ i * y ^ (-i + n + 1) * binom(n,i)",
                                            "str": "rewriting x ^ i * y ^ (-i + n + 1) * binom(n,i - 1) + x ^ i * y ^ (-i + n + 1) * binom(n,i) to x ^ i * y ^ (-i + n + 1) * (binom(n,i - 1) + binom(n,i))"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{i=1}^{n}{x ^ {i} y ^ {-i + n + 1} \\binom{n + 1}{i}} + x ^ {n + 1} + y ^ {n + 1}",
                                        "res": "SUM(i, 1, n, x ^ i * y ^ (-i + n + 1) * binom(n + 1,i)) + x ^ (n + 1) + y ^ (n + 1)",
                                        "rule": {
                                            "eq": "binom(n,m - 1) + binom(n,m) = binom(n + 1,m)",
                                            "eq_fixes": [],
                                            "latex_str": "apply equation \\(\\binom{n}{m - 1} + \\binom{n}{m} = \\binom{n + 1}{m}\\)",
                                            "name": "ApplyEquation",
                                            "source": "binom(n,i - 1) + binom(n,i)",
                                            "str": "apply equation: binom(n,m - 1) + binom(n,m) = binom(n + 1,m)"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            },
                            {
                                "fixes": [],
                                "latex_start": "\\sum_{k=0}^{n + 1}{x ^ {k} y ^ {-k + n + 1} \\binom{n + 1}{k}}",
                                "start": "SUM(k, 0, n + 1, x ^ k * y ^ (-k + n + 1) * binom(n + 1,k))",
                                "steps": [
                                    {
                                        "latex_res": "x ^ {0} y ^ {-0 + n + 1} \\binom{n + 1}{0} + \\sum_{i=0 + 1}^{n + 1}{x ^ {i} y ^ {-i + n + 1} \\binom{n + 1}{i}}",
                                        "res": "x ^ 0 * y ^ (-0 + n + 1) * binom(n + 1,0) + SUM(i, 0 + 1, n + 1, x ^ i * y ^ (-i + n + 1) * binom(n + 1,i))",
                                        "rule": {
                                            "cond": "k = 0",
                                            "latex_str": "split item on \\(k = 0\\)",
                                            "name": "SplitItem",
                                            "str": "split item on k = 0"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x ^ {0} y ^ {-0 + n + 1} \\binom{n + 1}{0} + (\\sum_{j=0 + 1}^{n + 1 - 1}{x ^ {j} y ^ {-j + n + 1} \\binom{n + 1}{j}} + x ^ {n + 1} y ^ {-(n + 1) + n + 1} \\binom{n + 1}{n + 1})",
                                        "res": "x ^ 0 * y ^ (-0 + n + 1) * binom(n + 1,0) + (SUM(j, 0 + 1, n + 1 - 1, x ^ j * y ^ (-j + n + 1) * binom(n + 1,j)) + x ^ (n + 1) * y ^ (-(n + 1) + n + 1) * binom(n + 1,n + 1))",
                                        "rule": {
                                            "cond": "i = n + 1",
                                            "latex_str": "split item on \\(i = n + 1\\) at 1",
                                            "loc": "1",
                                            "name": "SplitItem",
                                            "str": "split item on i = n + 1 at 1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x ^ {0} y ^ {-0 + n + 1}\\cdot 1 + (\\sum_{j=0 + 1}^{n + 1 - 1}{x ^ {j} y ^ {-j + n + 1} \\binom{n + 1}{j}} + x ^ {n + 1} y ^ {-(n + 1) + n + 1} \\binom{n + 1}{n + 1})",
                                        "res": "x ^ 0 * y ^ (-0 + n + 1) * 1 + (SUM(j, 0 + 1, n + 1 - 1, x ^ j * y ^ (-j + n + 1) * binom(n + 1,j)) + x ^ (n + 1) * y ^ (-(n + 1) + n + 1) * binom(n + 1,n + 1))",
                                        "rule": {
                                            "func_name": "binom",
                                            "loc": "0.1",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition at 0.1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "x ^ {0} y ^ {-0 + n + 1}\\cdot 1 + (\\sum_{j=0 + 1}^{n + 1 - 1}{x ^ {j} y ^ {-j + n + 1} \\binom{n + 1}{j}} + x ^ {n + 1} y ^ {-(n + 1) + n + 1}\\cdot 1)",
                                        "res": "x ^ 0 * y ^ (-0 + n + 1) * 1 + (SUM(j, 0 + 1, n + 1 - 1, x ^ j * y ^ (-j + n + 1) * binom(n + 1,j)) + x ^ (n + 1) * y ^ (-(n + 1) + n + 1) * 1)",
                                        "rule": {
                                            "func_name": "binom",
                                            "loc": "1.1.1",
                                            "name": "ExpandDefinition",
                                            "str": "expand definition at 1.1.1"
                                        },
                                        "type": "CalculationStep"
                                    },
                                    {
                                        "latex_res": "\\sum_{j=1}^{n}{x ^ {j} y ^ {-j + n + 1} \\binom{n + 1}{j}} + x ^ {n + 1} + y ^ {n + 1}",
                                        "res": "SUM(j, 1, n, x ^ j * y ^ (-j + n + 1) * binom(n + 1,j)) + x ^ (n + 1) + y ^ (n + 1)",
                                        "rule": {
                                            "name": "FullSimplify",
                                            "str": "full simplify"
                                        },
                                        "type": "CalculationStep"
                                    }
                                ],
                                "type": "Calculation"
                            }
                        ],
                        "finished": true,
                        "goal": "(x + y) ^ (n + 1) = SUM(k, 0, n + 1, x ^ k * y ^ (-k + n + 1) * binom(n + 1,k))",
                        "latex_goal": "(x + y) ^ {n + 1} = \\sum_{k=0}^{n + 1}{x ^ {k} y ^ {-k + n + 1} \\binom{n + 1}{k}}",
                        "type": "CalculationProof"
                    },
                    "type": "Goal",
                    "wellformed": false
                },
                "induct_var": "n",
                "latex_goal": "(x + y) ^ {n} = \\sum_{k=0}^{n}{\\binom{n}{k} x ^ {k} y ^ {n - k}}",
                "start": "1",
                "type": "InductionProof"
            },
            "type": "Goal",
            "wellformed": false
        }
    ],
    "name": "binom_example01"
}